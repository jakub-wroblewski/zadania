#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main()
{

    //Zadanie 1.2.1
    printf("HELLO WORLD\n");

    //Zadanie 1.2.2
    printf("Bardzo\ndlugi\nnapis\n");


    //Zadanie 1.2.3
    printf("Napis zawierajacy rozne dziwne znaczki // \\ \\ $ & %%\n\n");

    //Zadanie 1.2.4
    int liczba;
    scanf("%d",&liczba);
    printf("%d\n",liczba);

    //Zadanie 1.2.5
    float liczba2;
    scanf("%f", &liczba2);
    printf("%f\n",liczba2);

    //Zadanie 1.2.6
     int x,y,z;
    scanf("%d",&x);
    scanf("%d",&y);
    scanf("%d",&z);
    printf("%d\n", x);
    printf("%d\n", y);
    printf("%d\n", z);

     //zadanie 1.2.7
    int a;
    scanf("%d", &a);
    printf("%d", a+1);

    //Zadanie 1.2.8
    printf("Podaj oceny");
    int b,c,d;
    scanf("%d", &b);
    scanf("%d", &c);
    scanf("%d", &d);
   float srednia = (b+c+d)/3.0;
   printf("%lf", srednia);

   //Zadanie 1.2.9
   double v;
   scanf("%lf",&v);
   printf("%f", sqrt(v));

   //Zadanie 1.2.10
   double q;
   scanf("%lf", &q);
   printf("%f",fabs(q));

   //Zadanie 1.2.11
   double w;
   scanf("%lf",&w);
   printf("%.2f",w);

   //Zadanie 1.2.12
   float f;
   scanf("%f",&f);
   printf("%.1e",f);



return 0;
}





#include <stdio.h>
#include <stdlib.h>
#include <math.h>

   //Zadanie 2.2.4


int potenga(unsigned int n)
{
    int wynik = 1;
    int podstawa = 2;
    for(int i = 0; i < n;i++)
    {
        wynik = wynik * podstawa;
    }
        return wynik;
}

int main()
{
    unsigned int n;
    scanf("%d", &n);
    printf("%d", potega(n));


    //Z funkcji wbudowanej
    //printf("%lf", pow(2,n));

    return 0;
}


int potenga(float n)
{
    int wynik = 1;
    int podstawa = 2;
    for(int i = 0; i < n;i++)
    {
        wynik = wynik * podstawa;
    }
        return wynik;
}

int pierwiastek(int n)
{
    int wynik = 49;
    wynik = wynik * potenga(1/2);

}
int main()
{
    int n;
    scanf("%d", &n);
    int wynik;
    wynik = wynik * 1/2

    printf("%d", wynik);
    //int wynik;
   // wynik = sqrt(49);
   // printf("%d", wynik);

    return 0;


}



#include <stdio.h>
#include <stdlib.h>
#include <math.h>

    //Zadanie 2.2.2
int silnia(int n)
{
    unsigned int wynik = 1;
    for(int i = n;i>1;i--)
    {
        wynik*=i;
    }

}

int main()
{
    unsigned int n;
    scanf("%d", &n);

    printf("%d",silnia(n));



    return 0;
}


int mniejsza(int *w1, int *w2)
    {
        if(*w1<*w2)
            return *w1;
        return *w2;
    }
int main()
{
    int w1 = 3, w2=6;
    printf("%d\n", mniejsza(&w1,&w2));
    return 0;
}


int* lokacja(unsigned int n)
{
    return malloc(n*sizeof(int));

}
int main()
{
    printf("%d", lokacja(12));


    return 0;
}



int* lokacja(unsigned int x)
{
    return malloc(x*sizeof(double));

}

int main()
{
    printf("%lf", lokacja(12));

    return 0;
}


#include <stdio.h>
#include <stdlib.h>

void przepisywanie(int const *a, int *const b)
{
    *b=*a;

}


int main()
{
    int a;
    int b;
    printf("a=%d, adres: %p\n",a,&a);
    printf("b=%d, adres: %p\n",b,&b);
    przepisywanie(&a,&b);
   // printf("%d", a);
   // printf("%d", b);
    printf("a=%d, adres: %p\n",a,&a);
    printf("b=%d, adres: %p\n",b,&b);
    return 0;
}


int* function(int *w1, int *w2)
    {
        if(*w1<*w2)
            return w1;
        return w2;
    }
int main()
{
    int w1 = 3, w2=6;
    printf("%p\n", function(&w1,&w2));
    return 0;
}

void zamiana(int *a, int *b)
{
    if(*a>*b)
    {
        int lok =*a;
        *a=*b;
        *b=lok;
    }

}

int main()
{



    int a=3, b=6;
    printf("a=%d, adres: %p\n",a,&a);
    printf("b=%d, adres: %p\n",b,&b);
    printf("po zmianie\n");
    zamiana(&a,&b);
    printf("a=%d, adres: %p\n",a,&a);
    printf("b=%d, adres: %p\n",b,&b);

    return 0;
}



void zamiana(int n,int *w)
{
    *w=n;

}

int main()
{
    int n;
    n = 3;
    int w;
    printf("n to: %d\n", n);
    printf("w to: %d\n", w);
    zamiana(n,&w);
    printf("n to: %d\n", n);
    printf("w to: %d\n", w);
    return 0;
}


int* ilosc()
{
    return malloc(sizeof(int));
}

int main()
{
    printf("%p\n",ilosc());
    return 0;
}

int rekurencja(int n)
{
    if(n == 0 || n == 1)
        {
            return 2;
        }
        else
        {
            return rekurencja(n-1) + n;
        }
        return 2 * (rekurencja(n - 1) * n) - n;
}


int main()
{
    printf("%d", rekurencja(3));
    printf("%d", rekurencja(7));


    return 0;
}

void zamiana(int *a, int *b)
{
    int lok = *a;
    *a = *b;
    *b = lok;
}
int main()
{
    int a,b;
    int c = 4;
    int d = 8;
    printf("Testowy\n");
    printf("%d\n", c);
    printf("%d\n", d);
    zamiana(&c,&d);
    printf("%d\n", c);
    printf("%d\n", d);
    printf("Program uzytkownik \n");
    scanf("%d", &a);
    scanf("%d", &b);
    zamiana(&a,&b);
    printf("%d\n", a);
    printf("%d\n", b);
    return 0;
}












